// Code generated by MockGen. DO NOT EDIT.
// Source: datos.go

// Package datos is a generated GoMock package.
package datos

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// Mockhacer is a mock of hacer interface.
type Mockhacer struct {
	ctrl     *gomock.Controller
	recorder *MockhacerMockRecorder
}

// MockhacerMockRecorder is the mock recorder for Mockhacer.
type MockhacerMockRecorder struct {
	mock *Mockhacer
}

// NewMockhacer creates a new mock instance.
func NewMockhacer(ctrl *gomock.Controller) *Mockhacer {
	mock := &Mockhacer{ctrl: ctrl}
	mock.recorder = &MockhacerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockhacer) EXPECT() *MockhacerMockRecorder {
	return m.recorder
}

// cortar mocks base method.
func (m *Mockhacer) cortar() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "cortar")
	ret0, _ := ret[0].(int)
	return ret0
}

// cortar indicates an expected call of cortar.
func (mr *MockhacerMockRecorder) cortar() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "cortar", reflect.TypeOf((*Mockhacer)(nil).cortar))
}
