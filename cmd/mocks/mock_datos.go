// Code generated by MockGen. DO NOT EDIT.
// Source: datos.go

// Package mock_datos is a generated GoMock package.
package mock_datos

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockApi is a mock of Api interface.
type MockApi struct {
	ctrl     *gomock.Controller
	recorder *MockApiMockRecorder
}

// MockApiMockRecorder is the mock recorder for MockApi.
type MockApiMockRecorder struct {
	mock *MockApi
}

// NewMockApi creates a new mock instance.
func NewMockApi(ctrl *gomock.Controller) *MockApi {
	mock := &MockApi{ctrl: ctrl}
	mock.recorder = &MockApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApi) EXPECT() *MockApiMockRecorder {
	return m.recorder
}

// Fregar mocks base method.
func (m *MockApi) Fregar() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Fregar")
	ret0, _ := ret[0].(bool)
	return ret0
}

// Fregar indicates an expected call of Fregar.
func (mr *MockApiMockRecorder) Fregar() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fregar", reflect.TypeOf((*MockApi)(nil).Fregar))
}

// MockReforma is a mock of Reforma interface.
type MockReforma struct {
	ctrl     *gomock.Controller
	recorder *MockReformaMockRecorder
}

// MockReformaMockRecorder is the mock recorder for MockReforma.
type MockReformaMockRecorder struct {
	mock *MockReforma
}

// NewMockReforma creates a new mock instance.
func NewMockReforma(ctrl *gomock.Controller) *MockReforma {
	mock := &MockReforma{ctrl: ctrl}
	mock.recorder = &MockReformaMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReforma) EXPECT() *MockReformaMockRecorder {
	return m.recorder
}

// LimpiaCasa mocks base method.
func (m *MockReforma) LimpiaCasa() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LimpiaCasa")
	ret0, _ := ret[0].(int)
	return ret0
}

// LimpiaCasa indicates an expected call of LimpiaCasa.
func (mr *MockReformaMockRecorder) LimpiaCasa() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LimpiaCasa", reflect.TypeOf((*MockReforma)(nil).LimpiaCasa))
}
